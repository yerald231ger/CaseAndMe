@model LeftFilterContainer

<form id="cam-filter" asp-controller="Filter" asp-action="Index" method="post">

    @foreach (var fc in Model.FilterCategories)
    {
        switch (fc.FilterType)
        {
            case FilterType.Brand:
                break;
            case FilterType.Model:
                break;
            case FilterType.PriceRange:
                var prf = (RangePriceFilter)fc;
                for (int i = 0; i < prf.RangesFilters.Count; i++)
                {
                    <ul>
                        <li>
                            <input type="checkbox" name="rangePriceFilter.RangesFilters[@i].Selected" value="true" style="display: flex" onclick="submit()" />
                            <input type="text" name="rangePriceFilter.RangesFilters[@i].Value.MinPrice" value="@prf.RangesFilters[i].Value.MinPrice" /> - 
                            <input type="text" name="rangePriceFilter.RangesFilters[@i].Value.MaxPrice" value="@prf.RangesFilters[i].Value.MaxPrice" />
                            <label>(@prf.RangesFilters[i].Matched)</label>
                        </li>
                    </ul>
                }
                break;
            case FilterType.Rating:
                var rf = (RatingFilter)fc;
                for (int i = 0; i < rf.RatingsFilters.Count; i++)
                {
                    <ul>
                        <li>
                            <input type="checkbox" name="ratingFilter.RatingsFilters[@i].Selected" value="true" style="display: flex" onclick="submit()" />
                            <label>
                                Rating: @rf.RatingsFilters[i].Value
                            </label>
                            <label>(@rf.RatingsFilters[i].Matched)</label>
                            <input type="hidden" name="ratingFilter.RatingsFilters[@i].Value" value="@rf.RatingsFilters[i].Value" />
                        </li>
                    </ul>
                }
                break;
            case FilterType.Category:
                var cf = (CategoryFilter)fc;
                for (int i = 0; i < cf.CategoriesFilters.Count; i++)
                {
                    <ul>
                        <li>
                            <input type="checkbox" name="categoryFilter.CategoriesFilters[@i].Selected" value="true" style="display: flex" onclick="submit()" />
                            <label>
                                Rating: @cf.CategoriesFilters[i].Value
                            </label>
                            <label>(@cf.CategoriesFilters[i].Matched)</label>
                            <input type="hidden" name="categoryFilter.CategoriesFilters[@i].Value" value="@cf.CategoriesFilters[i].Value" />
                        </li>
                    </ul>
                }
                break;
            case FilterType.Material:
                var mf = (MaterialFilter)fc;
                for (int i = 0; i < mf.MaterialsFilters.Count; i++)
                {
                    <ul>
                        <li>
                            <input type="checkbox" name="materialFilter.MaterialsFilters[@i].Selected" value="true" style="display: flex" onclick="submit()" />
                            <label>
                                Rating: @mf.MaterialsFilters[i].Value
                            </label>
                            <label>(@mf.MaterialsFilters[i].Matched)</label>
                            <input type="hidden" name="materialFilter.MaterialsFilters[@i].Value" value="@mf.MaterialsFilters[i].Value" />
                        </li>
                    </ul>
                }
                break;
            case FilterType.Color:
                break;
            default:
                break;
        }
    }

    <script>
        function submit() {
            document.getElementById("cam-filter").submit()
        }
    </script>
</form>